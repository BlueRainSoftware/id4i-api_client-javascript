/**
 * ID4i API
 * HTTP API Documentation for ID4i
 *
 * OpenAPI spec version: 0.0.1-alpha
 * Contact: info@bluerain.de
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.2.3
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/ApiError', 'model/PaginatedResponseGuid'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('../model/ApiError'), require('../model/PaginatedResponseGuid'));
  } else {
    // Browser globals (root is window)
    if (!root.Id4iApi) {
      root.Id4iApi = {};
    }
    root.Id4iApi.SearchApi = factory(root.Id4iApi.ApiClient, root.Id4iApi.ApiError, root.Id4iApi.PaginatedResponseGuid);
  }
}(this, function(ApiClient, ApiError, PaginatedResponseGuid) {
  'use strict';

  /**
   * Search service.
   * @module api/SearchApi
   * @version 0.0.1-alpha
   */

  /**
   * Constructs a new SearchApi. 
   * @alias module:api/SearchApi
   * @class
   * @param {module:ApiClient} apiClient Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;


    /**
     * Callback function to receive the result of the searchByAlias operation.
     * @callback module:api/SearchApi~searchByAliasCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PaginatedResponseGuid} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Search for GUIDs by alias
     * @param {String} alias The alias to search for
     * @param {module:model/String} aliasType Alias type type to search for
     * @param {Object} opts Optional parameters
     * @param {String} opts.authorization Authorization JWT Bearer Token as returned from /login
     * @param {String} opts.acceptLanguage Requested language
     * @param {Number} opts.offset Start with the n-th element. 
     * @param {Number} opts.limit The maximum count of returned elements.
     * @param {module:api/SearchApi~searchByAliasCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PaginatedResponseGuid}
     */
    this.searchByAlias = function(alias, aliasType, opts, callback) {
      opts = opts || {};
      var postBody = null;

      // verify the required parameter 'alias' is set
      if (alias === undefined || alias === null) {
        throw new Error("Missing the required parameter 'alias' when calling searchByAlias");
      }

      // verify the required parameter 'aliasType' is set
      if (aliasType === undefined || aliasType === null) {
        throw new Error("Missing the required parameter 'aliasType' when calling searchByAlias");
      }


      var pathParams = {
      };
      var queryParams = {
        'alias': alias,
        'aliasType': aliasType,
        'offset': opts['offset'],
        'limit': opts['limit']
      };
      var headerParams = {
        'Authorization': opts['authorization'],
        'Accept-Language': opts['acceptLanguage']
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = ['application/xml', 'application/json;charset=UTF-8'];
      var accepts = ['application/xml', 'application/json;charset=UTF-8'];
      var returnType = PaginatedResponseGuid;

      return this.apiClient.callApi(
        '/api/v1/search/guids', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
  };

  return exports;
}));
