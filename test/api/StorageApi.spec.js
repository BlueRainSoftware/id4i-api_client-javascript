/**
 * ID4i API
 * HTTP API Documentation for ID4i
 *
 * OpenAPI spec version: 0.2.0
 * Contact: info@bluerain.de
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.2.3
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Id4iApi);
  }
}(this, function(expect, Id4iApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new Id4iApi.StorageApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('StorageApi', function() {
    describe('createDocument', function() {
      it('should call createDocument successfully', function(done) {
        //uncomment below and update the code to test createDocument
        //instance.createDocument(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createDocument1', function() {
      it('should call createDocument1 successfully', function(done) {
        //uncomment below and update the code to test createDocument1
        //instance.createDocument1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteDocument', function() {
      it('should call deleteDocument successfully', function(done) {
        //uncomment below and update the code to test deleteDocument
        //instance.deleteDocument(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteDocument1', function() {
      it('should call deleteDocument1 successfully', function(done) {
        //uncomment below and update the code to test deleteDocument1
        //instance.deleteDocument1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getDocument', function() {
      it('should call getDocument successfully', function(done) {
        //uncomment below and update the code to test getDocument
        //instance.getDocument(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getDocument1', function() {
      it('should call getDocument1 successfully', function(done) {
        //uncomment below and update the code to test getDocument1
        //instance.getDocument1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getPublicDocument', function() {
      it('should call getPublicDocument successfully', function(done) {
        //uncomment below and update the code to test getPublicDocument
        //instance.getPublicDocument(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getPublicDocument1', function() {
      it('should call getPublicDocument1 successfully', function(done) {
        //uncomment below and update the code to test getPublicDocument1
        //instance.getPublicDocument1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listAllDocuments', function() {
      it('should call listAllDocuments successfully', function(done) {
        //uncomment below and update the code to test listAllDocuments
        //instance.listAllDocuments(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listAllDocuments1', function() {
      it('should call listAllDocuments1 successfully', function(done) {
        //uncomment below and update the code to test listAllDocuments1
        //instance.listAllDocuments1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listAllPublicDocuments', function() {
      it('should call listAllPublicDocuments successfully', function(done) {
        //uncomment below and update the code to test listAllPublicDocuments
        //instance.listAllPublicDocuments(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listAllPublicDocuments1', function() {
      it('should call listAllPublicDocuments1 successfully', function(done) {
        //uncomment below and update the code to test listAllPublicDocuments1
        //instance.listAllPublicDocuments1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listDocuments', function() {
      it('should call listDocuments successfully', function(done) {
        //uncomment below and update the code to test listDocuments
        //instance.listDocuments(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listDocuments1', function() {
      it('should call listDocuments1 successfully', function(done) {
        //uncomment below and update the code to test listDocuments1
        //instance.listDocuments1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listPublicDocuments', function() {
      it('should call listPublicDocuments successfully', function(done) {
        //uncomment below and update the code to test listPublicDocuments
        //instance.listPublicDocuments(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listPublicDocuments1', function() {
      it('should call listPublicDocuments1 successfully', function(done) {
        //uncomment below and update the code to test listPublicDocuments1
        //instance.listPublicDocuments1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('read', function() {
      it('should call read successfully', function(done) {
        //uncomment below and update the code to test read
        //instance.read(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('read1', function() {
      it('should call read1 successfully', function(done) {
        //uncomment below and update the code to test read1
        //instance.read1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('readDocument', function() {
      it('should call readDocument successfully', function(done) {
        //uncomment below and update the code to test readDocument
        //instance.readDocument(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('readDocument1', function() {
      it('should call readDocument1 successfully', function(done) {
        //uncomment below and update the code to test readDocument1
        //instance.readDocument1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('readPublicDocument', function() {
      it('should call readPublicDocument successfully', function(done) {
        //uncomment below and update the code to test readPublicDocument
        //instance.readPublicDocument(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('readPublicDocument1', function() {
      it('should call readPublicDocument1 successfully', function(done) {
        //uncomment below and update the code to test readPublicDocument1
        //instance.readPublicDocument1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateDocument', function() {
      it('should call updateDocument successfully', function(done) {
        //uncomment below and update the code to test updateDocument
        //instance.updateDocument(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateDocument1', function() {
      it('should call updateDocument1 successfully', function(done) {
        //uncomment below and update the code to test updateDocument1
        //instance.updateDocument1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('write', function() {
      it('should call write successfully', function(done) {
        //uncomment below and update the code to test write
        //instance.write(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('write1', function() {
      it('should call write1 successfully', function(done) {
        //uncomment below and update the code to test write1
        //instance.write1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('writeDocument', function() {
      it('should call writeDocument successfully', function(done) {
        //uncomment below and update the code to test writeDocument
        //instance.writeDocument(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('writeDocument1', function() {
      it('should call writeDocument1 successfully', function(done) {
        //uncomment below and update the code to test writeDocument1
        //instance.writeDocument1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
